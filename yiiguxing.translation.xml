<application>
  <component name="AppStorage">
    <histories>
      <item value="Creates a filter that matches all documents containing a field with geospatial data that is near the specified GeoJSON point." />
      <item value="Central class for creating queries. It follows a fluent API style so that you can easily chain together multiple * criteria. Static import of the 'Criteria.where' method will improve readability." />
      <item value="* Specialization of {@link Component @Component} for classes that declare * {@link ExceptionHandler @ExceptionHandler}, {@link InitBinder @InitBinder}, or * {@link ModelAttribute @ModelAttribute} methods to be shared across * multiple {@code @Controller} classes." />
      <item value="Specialization" />
      <item value="VM588:1 Uncaught SyntaxError: Invalid destructuring assignment target" />
      <item value="Invalid prop: type check failed for prop &quot;pageSize&quot;. Expected Number with value NaN, got Array   found in" />
      <item value="权限" />
      <item value="duplicate attribute: @click " />
      <item value="详情" />
      <item value="岗 did you register the component correctly? For recursive components, make sure to provide the &quot;name&quot; option." />
      <item value="岗位" />
      <item value="比率" />
      <item value="比例" />
      <item value="占比" />
      <item value="账号" />
      <item value="Component template should contain exactly one root element. If you are using v-if on multiple elements, use v-else-if to chain them instead. " />
      <item value="table Data" />
      <item value="in Use Formatter" />
      <item value="update Cant" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="11" />
        <entry key="ENGLISH" value="12" />
      </map>
    </option>
  </component>
  <component name="Settings">
    <option name="ignoreRegExp" value="" />
    <option name="translateDocumentation" value="true" />
  </component>
</application>